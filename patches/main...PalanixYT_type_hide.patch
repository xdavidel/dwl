From a6e747fa266350186493fda5ce1232f9c4cbf307 Mon Sep 17 00:00:00 2001
From: Palanix <palanixyt@gmail.com>
Date: Sun, 19 Feb 2023 19:14:06 +0100
Subject: [PATCH] Hide cursor while typing

---
 config.def.h |  2 ++
 dwl.c        | 24 ++++++++++++++++++++++++
 2 files changed, 26 insertions(+)

diff --git a/config.def.h b/config.def.h
index 419e6ef4..406cb2fc 100644
--- a/config.def.h
+++ b/config.def.h
@@ -8,6 +8,8 @@ static const float focuscolor[]            = {1.0, 0.0, 0.0, 1.0};
 /* To conform the xdg-protocol, set the alpha to zero to restore the old behavior */
 static const float fullscreen_bg[]         = {0.1, 0.1, 0.1, 1.0};
 
+static const int hide_type = 1;
+
 /* tagging */
 static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
 
diff --git a/dwl.c b/dwl.c
index 8043bf98..e913372c 100644
--- a/dwl.c
+++ b/dwl.c
@@ -259,6 +259,7 @@ static void focusmon(const Arg *arg);
 static void focusstack(const Arg *arg);
 static Client *focustop(Monitor *m);
 static void fullscreennotify(struct wl_listener *listener, void *data);
+static void hidecursor(int hide);
 static void incnmaster(const Arg *arg);
 static void inputdevice(struct wl_listener *listener, void *data);
 static int keybinding(uint32_t mods, xkb_keysym_t sym);
@@ -347,6 +348,7 @@ static struct wlr_virtual_keyboard_manager_v1 *virtual_keyboard_mgr;
 
 static struct wlr_cursor *cursor;
 static struct wlr_xcursor_manager *cursor_mgr;
+static int cursor_hidden;
 
 static struct wlr_session_lock_manager_v1 *session_lock_mgr;
 static struct wlr_scene_rect *locked_bg;
@@ -558,6 +560,8 @@ axisnotify(struct wl_listener *listener, void *data)
 	 * for example when you move the scroll wheel. */
 	struct wlr_pointer_axis_event *event = data;
 	IDLE_NOTIFY_ACTIVITY;
+	if(cursor_hidden)
+			hidecursor(0);
 	/* TODO: allow usage of scroll whell for mousebindings, it can be implemented
 	 * checking the event's orientation and the delta of the event */
 	/* Notify the client with pointer focus of the axis event. */
@@ -576,6 +580,8 @@ buttonpress(struct wl_listener *listener, void *data)
 	const Button *b;
 
 	IDLE_NOTIFY_ACTIVITY;
+	if(cursor_hidden)
+		hidecursor(0);
 
 	switch (event->state) {
 	case WLR_BUTTON_PRESSED:
@@ -1324,6 +1330,20 @@ fullscreennotify(struct wl_listener *listener, void *data)
 	setfullscreen(c, client_wants_fullscreen(c));
 }
 
+void
+hidecursor(int hide)
+{
+	if (hide) {
+		wlr_cursor_set_image(cursor, NULL, 0, 0, 0, 0, 0, 0);
+		wlr_seat_pointer_notify_clear_focus(seat);
+		cursor_hidden = 1;
+		return;
+	}
+	wlr_xcursor_manager_set_cursor_image(cursor_mgr, "left_ptr", cursor);
+	cursor_hidden = false;
+	motionnotify(0);
+}
+
 void
 incnmaster(const Arg *arg)
 {
@@ -1427,6 +1447,8 @@ keypress(struct wl_listener *listener, void *data)
 		wlr_seat_keyboard_notify_key(seat, event->time_msec,
 			event->keycode, event->state);
 	}
+	if(hide_type)
+		hidecursor(1);
 }
 
 void
@@ -1629,6 +1651,8 @@ motionnotify(uint32_t time)
 	/* time is 0 in internal calls meant to restore pointer focus. */
 	if (time) {
 		IDLE_NOTIFY_ACTIVITY;
+		if(cursor_hidden)
+			hidecursor(0);
 
 		/* Update selmon (even while dragging a window) */
 		if (sloppyfocus)
