From 0804d4156cda86b7adf9589fcd4aef78690d9add Mon Sep 17 00:00:00 2001
From: Vladislav Nepogodin <nepogodin.vlad@gmail.com>
Date: Sat, 24 Jul 2021 03:41:10 +0400
Subject: [PATCH] Add grid layout

---
 config.def.h |  2 ++
 dwl.c        | 36 ++++++++++++++++++++++++++++++++++++
 2 files changed, 38 insertions(+)

diff --git a/config.def.h b/config.def.h
index 089aa379..25c8c7f6 100644
--- a/config.def.h
+++ b/config.def.h
@@ -22,6 +22,7 @@ static const Layout layouts[] = {
 	{ "[]=",      tile },
 	{ "><>",      NULL },    /* no layout function means floating behavior */
 	{ "[M]",      monocle },
+	{ "HHH",      grid },
 };
 
 /* monitors
@@ -82,6 +83,7 @@ static const Key keys[] = {
 	{ MODKEY,                    XKB_KEY_t,          setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                    XKB_KEY_f,          setlayout,      {.v = &layouts[1]} },
 	{ MODKEY,                    XKB_KEY_m,          setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                    XKB_KEY_g,          setlayout,      {.v = &layouts[3]} },
 	{ MODKEY,                    XKB_KEY_space,      setlayout,      {0} },
 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_space,      togglefloating, {0} },
 	{ MODKEY, 					 XKB_KEY_e,    		togglefullscreen, {0} },
diff --git a/dwl.c b/dwl.c
index a2a0b692..a8b912a7 100644
--- a/dwl.c
+++ b/dwl.c
@@ -240,6 +240,7 @@ static void focusmon(const Arg *arg);
 static void focusstack(const Arg *arg);
 static void fullscreennotify(struct wl_listener *listener, void *data);
 static Client *focustop(Monitor *m);
+static void grid(Monitor *m);
 static void incnmaster(const Arg *arg);
 static void inputdevice(struct wl_listener *listener, void *data);
 static int keybinding(uint32_t mods, xkb_keysym_t sym);
@@ -1166,6 +1167,41 @@ focustop(Monitor *m)
 	return NULL;
 }
 
+void
+grid(Monitor *m) {
+    unsigned int n = 0, i = 0, ch, cw, rows, cols;
+    Client *c;
+
+    wl_list_for_each(c, &clients, link)
+        if (VISIBLEON(c, m) && !c->isfloating)
+            n++;
+    if (n == 0)
+        return;
+
+    /* grid dimensions */
+    for (rows = 0; rows <= (n / 2); rows++)
+        if ((rows * rows) >= n)
+            break;
+    cols = (rows && ((rows - 1) * rows) >= n) ? rows - 1 : rows;
+
+    /* window geoms (cell height/width) */
+    ch = m->w.height / (rows ? rows : 1);
+    cw = m->w.width / (cols ? cols : 1);
+    wl_list_for_each(c, &clients, link) {
+        unsigned int cx, cy, ah, aw;
+        if (!VISIBLEON(c, m) || c->isfloating || c->isfullscreen)
+            continue;
+
+        cx = m->w.x + (i / rows) * cw;
+        cy = m->w.y + (i % rows) * ch;
+        /* adjust height/width of last row/column's windows */
+        ah = (((i + 1) % rows) == 0) ? m->w.height - ch * rows : 0;
+        aw = (i >= (rows * (cols - 1))) ? m->w.width - cw * cols : 0;
+        resize(c, cx, cy, cw - aw, ch - ah, 0);
+        i++;
+    }
+}
+
 void
 incnmaster(const Arg *arg)
 {
